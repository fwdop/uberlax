{"version":3,"sources":["../src/math/math.js","index.js"],"names":["module","exports","calculateWidthToCover","elementWidth","elementHeight","canvasHeight","scalePercent","calculateHeightToCover","canvasWidth","calculatePositionByPercentage","start","moveTo","percentage","iterations","console","time","i","mathJs","timeEnd","mathRs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,qBAAqB,EAAE,+BAACC,YAAD,EAAeC,aAAf,EAA8BC,YAA9B,EAA+C;AACpE,QAAMC,YAAY,GAAGD,YAAY,GAAG,KAAf,GAAuBD,aAA5C;AACA,WAAOD,YAAY,GAAGG,YAAf,GAA8B,KAArC;AACD,GAJc;AAKfC,EAAAA,sBAAsB,EAAE,gCAACJ,YAAD,EAAeC,aAAf,EAA8BI,WAA9B,EAA8C;AACpE,QAAMF,YAAY,GAAGE,WAAW,GAAG,KAAd,GAAsBL,YAA3C;AACA,WAAOC,aAAa,GAAGE,YAAhB,GAA+B,KAAtC;AACD,GARc;AASfG,EAAAA,6BAA6B,EAAE,uCAACC,KAAD,EAAQC,MAAR,EAAgBC,UAAhB,EAA+B;AAC5D,WAAQD,MAAM,GAAGC,UAAT,GAAsB,KAAvB,GAAgCF,KAAvC;AACD;AAXc,CAAjB;;;;ACAA;;AACA;;;;AAEA,IAAIG,UAAU,GAAG,QAAjB;AACAC,OAAO,CAACC,IAAR,CAAa,YAAb;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,UAApB,EAAgCG,CAAC,EAAjC,EAAqC;AACnCC,gBAAOR,6BAAP,CAAqC,IAArC,EAA2C,GAA3C,EAAgD,IAAhD;AACD;;AAAA;AACDK,OAAO,CAACI,OAAR,CAAgB,YAAhB;AAEAJ,OAAO,CAACC,IAAR,CAAa,aAAb;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,UAApB,EAAgCG,CAAC,EAAjC,EAAqC;AACnCG,iBAAOV,6BAAP,CAAqC,IAArC,EAA2C,GAA3C,EAAgD,IAAhD;AACD;;AAAA;AACDK,OAAO,CAACI,OAAR,CAAgB,aAAhB","file":"benchmark.e31bb0bc.map","sourceRoot":"../benchmark","sourcesContent":["module.exports = {\n  calculateWidthToCover: (elementWidth, elementHeight, canvasHeight) => {\n    const scalePercent = canvasHeight * 100.0 / elementHeight;\n    return elementWidth * scalePercent / 100.0;\n  },\n  calculateHeightToCover: (elementWidth, elementHeight, canvasWidth) => {\n    const scalePercent = canvasWidth * 100.0 / elementWidth;\n    return elementHeight * scalePercent / 100.0;\n  },\n  calculatePositionByPercentage: (start, moveTo, percentage) => {\n    return (moveTo * percentage / 100.0) + start;\n  }\n}\n","import mathJs from '../src/math/math.js';\nimport mathRs from '../src/math/math.rs';\n\nvar iterations = 10000000;\nconsole.time('JavaScript');\nfor (var i = 0; i < iterations; i++) {\n  mathJs.calculatePositionByPercentage(1000, 500, 2000);\n};\nconsole.timeEnd('JavaScript')\n\nconsole.time('Rust (WASM)');\nfor (var i = 0; i < iterations; i++) {\n  mathRs.calculatePositionByPercentage(1000, 500, 2000);\n};\nconsole.timeEnd('Rust (WASM)')\n"]}